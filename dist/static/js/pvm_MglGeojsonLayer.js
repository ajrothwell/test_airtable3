(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["pvm_MglGeojsonLayer"],{"521f":function(e,t,r){"use strict";r("4de4"),r("4160"),r("caad"),r("d81d"),r("b64b"),r("2532"),r("159b");var i=r("5530"),a=r("9f0b"),o={sourceId:{type:String,required:!0},source:{type:[Object,String],default:void 0}},s={layerId:{type:String,required:!0},layer:{type:Object,required:!0},before:{type:String,default:void 0}},n={clearSource:{type:Boolean,default:!0},replaceSource:{type:Boolean,default:!1},replace:{type:Boolean,default:!1}};t["a"]={mixins:[a["a"]],props:Object(i["a"])(Object(i["a"])(Object(i["a"])({},o),s),n),inject:["mapbox","map"],data:function(){return{initial:!0}},computed:{sourceLoaded:function(){return!!this.map&&this.map.isSourceLoaded(this.sourceId)},mapLayer:function(){return this.map?this.map.getLayer(this.layerId):null},mapSource:function(){return this.map?this.map.getSource(this.sourceId):null}},created:function(){this.layer.minzoom&&this.$watch("layer.minzoom",(function(e){this.initial||this.map.setLayerZoomRange(this.layerId,e,this.layer.maxzoom)})),this.layer.maxzoom&&this.$watch("layer.maxzoom",(function(e){this.initial||this.map.setLayerZoomRange(this.layerId,this.layer.minzoom,e)})),this.layer.paint&&this.$watch("layer.paint",(function(e){if(!this.initial&&e)for(var t=0,r=Object.keys(e);t<r.length;t++){var i=r[t];this.map.setPaintProperty(this.layerId,i,e[i])}}),{deep:!0}),this.layer.layout&&this.$watch("layer.layout",(function(e){if(!this.initial&&e)for(var t=0,r=Object.keys(e);t<r.length;t++){var i=r[t];this.map.setLayoutProperty(this.layerId,i,e[i])}}),{deep:!0}),this.layer.filter&&this.$watch("layer.filter",(function(e){this.initial||this.map.setFilter(this.layerId,e)}),{deep:!0})},beforeDestroy:function(){try{this.map.removeLayer(this.layerId)}catch(e){this.$_emitEvent("layer-does-not-exist",{layerId:this.sourceId,error:e})}if(this.clearSource)try{this.map.removeSource(this.sourceId)}catch(e){this.$_emitEvent("source-does-not-exist",{sourceId:this.sourceId,error:e})}},methods:{$_emitLayerMapEvent:function(e){return this.$_emitMapEvent(e,{layerId:this.layerId})},$_bindLayerEvents:function(e){var t=this;Object.keys(this.$listeners).forEach((function(r){e.includes(r)&&t.map.on(r,t.layerId,t.$_emitLayerMapEvent)}))},$_unbindEvents:function(e){var t=this;this.map&&e.forEach((function(e){t.map.off(e,t.layerId,t.$_emitLayerMapEvent)}))},$_watchSourceLoading:function(e){"source"===e.dataType&&e.sourceId===this.sourceId&&(this.$_emitEvent("layer-source-loading",{sourceId:this.sourceId}),this.map.off("dataloading",this.$_watchSourceLoading))},move:function(e){this.map.moveLayer(this.layerId,e),this.$_emitEvent("layer-moved",{layerId:this.layerId,beforeId:e})},remove:function(){this.map.removeLayer(this.layerId),this.map.removeSource(this.sourceId),this.$_emitEvent("layer-removed",{layerId:this.layerId}),this.$destroy()}},render:function(){}}},"760f":function(e,t,r){"use strict";r.r(t);r("99af"),r("d81d"),r("d3b7"),r("ac1f"),r("5319");var i=r("5530"),a=r("a2c7"),o=r("521f");t["default"]={name:"GeojsonLayer",mixins:[o["a"]],computed:{getSourceFeatures:function(){var e=this;return function(t){return e.map?e.map.querySourceFeatures(e.sourceId,{filter:t}):null}},getRenderedFeatures:function(){var e=this;return function(t,r){return e.map?e.map.queryRenderedFeatures(t,{layers:[e.layerId],filter:r}):null}},getClusterExpansionZoom:function(){var e=this;return function(t){return new Promise((function(r,i){if(!e.mapSource)return i(new Error("Map source with id ".concat(e.sourceId," not found.")));e.mapSource.getClusterExpansionZoom(t,(function(e,t){return e?i(e):r(t)}))}))}},getClusterChildren:function(){var e=this;return function(t){return new Promise((function(r,i){var a=e.mapSource;if(!a)return i(new Error("Map source with id ".concat(e.sourceId," not found.")));a.getClusterChildren(t,(function(e,t){return e?i(e):r(t)}))}))}},getClusterLeaves:function(){var e=this;return function(){for(var t=arguments.length,r=new Array(t),i=0;i<t;i++)r[i]=arguments[i];return new Promise((function(t,i){if(!e.mapSource)return i(new Error("Map source with id ".concat(e.sourceId," not found.")));var a;(a=e.mapSource).getClusterLeaves.apply(a,r.concat([function(e,r){return e?i(e):t(r)}]))}))}}},created:function(){console.log("GeojsonLayer.js created is running, this.sourceId:",this.sourceId,"this.source:",this.source),this.source&&this.$watch("source.data",(function(e){this.initial||this.mapSource.setData(e)}),{deep:!0}),this.$_deferredMount()},methods:{$_deferredMount:function(){if(this.map.on("dataloading",this.$_watchSourceLoading),this.source){var e=Object(i["a"])({type:"geojson"},this.source);try{console.log("try map.addSource is starting"),this.$props.layer.layout["icon-image"]&&this.map.loadImage(this.$attrs.icon,function(e,t){this.map.addImage(this.$props.layer.layout["icon-image"],t)}.bind(this)),this.map.addSource(this.sourceId,e)}catch(t){console.log("catch err is running, err:",t),this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,e))}}this.$_addLayer(),this.$_bindLayerEvents(a["a"]),this.map.off("dataloading",this.$_watchSourceLoading),this.initial=!1},$_addLayer:function(){var e=this.map.getLayer(this.layerId);if(e){if(!this.replace)return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;this.map.removeLayer(this.layerId)}var t=Object(i["a"])({id:this.layerId,source:this.sourceId},this.layer);console.log("$_addLayer is still running, layer:",t),this.map.addLayer(t,this.before),this.$_emitEvent("added",{layerId:this.layerId})},setFeatureState:function(e,t){if(this.map){var r={id:e,source:this.source};return this.map.setFeatureState(r,t)}},getFeatureState:function(e){if(this.map){var t={id:e,source:this.source};return this.map.getFeatureState(t)}},removeFeatureState:function(e,t,r){if(this.map){var i={id:e,source:this.source,sourceLayer:t};return this.map.removeFeatureState(i,r)}}}}},"9f0b":function(e,t,r){"use strict";r("d81d");var i=r("5530");t["a"]={methods:{$_emitEvent:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.$emit(e,Object(i["a"])({map:this.map,component:this},t))},$_emitMapEvent:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.$_emitEvent(e.type,Object(i["a"])({mapboxEvent:e},t))}}}},a2c7:function(e,t,r){"use strict";t["a"]=["mousedown","mouseup","click","dblclick","mousemove","mouseenter","mouseleave","mouseover","mouseout","contextmenu","touchstart","touchend","touchcancel"]}}]);
//# sourceMappingURL=pvm_MglGeojsonLayer.js.map