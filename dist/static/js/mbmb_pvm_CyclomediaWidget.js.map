{"version":3,"sources":["webpack:///./node_modules/@phila/vue-mapping/src/cyclomedia/Widget.vue?96b4","webpack:///./node_modules/@phila/vue-mapping/src/cyclomedia/Widget.vue?8c02","webpack:///./node_modules/proj4/lib/global.js","webpack:///./node_modules/proj4/lib/constants/values.js","webpack:///./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///./node_modules/proj4/lib/constants/units.js","webpack:///./node_modules/proj4/lib/match.js","webpack:///./node_modules/proj4/lib/projString.js","webpack:///./node_modules/wkt-parser/parser.js","webpack:///./node_modules/wkt-parser/process.js","webpack:///./node_modules/wkt-parser/index.js","webpack:///./node_modules/proj4/lib/defs.js","webpack:///./node_modules/proj4/lib/parseCode.js","webpack:///./node_modules/proj4/lib/extend.js","webpack:///./node_modules/proj4/lib/common/msfnz.js","webpack:///./node_modules/proj4/lib/common/sign.js","webpack:///./node_modules/proj4/lib/common/adjust_lon.js","webpack:///./node_modules/proj4/lib/common/tsfnz.js","webpack:///./node_modules/proj4/lib/common/phi2z.js","webpack:///./node_modules/proj4/lib/projections/merc.js","webpack:///./node_modules/proj4/lib/projections/longlat.js","webpack:///./node_modules/proj4/lib/projections.js","webpack:///./node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///./node_modules/proj4/lib/deriveConstants.js","webpack:///./node_modules/proj4/lib/constants/Datum.js","webpack:///./node_modules/proj4/lib/datum.js","webpack:///./node_modules/proj4/lib/Proj.js","webpack:///./node_modules/proj4/lib/datumUtils.js","webpack:///./node_modules/proj4/lib/datum_transform.js","webpack:///./node_modules/proj4/lib/adjust_axis.js","webpack:///./node_modules/proj4/lib/common/toPoint.js","webpack:///./node_modules/proj4/lib/checkSanity.js","webpack:///./node_modules/proj4/lib/transform.js","webpack:///./node_modules/proj4/lib/core.js","webpack:///./node_modules/mgrs/mgrs.js","webpack:///./node_modules/proj4/lib/Point.js","webpack:///./node_modules/proj4/lib/common/pj_enfn.js","webpack:///./node_modules/proj4/lib/common/pj_mlfn.js","webpack:///./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///./node_modules/proj4/lib/projections/tmerc.js","webpack:///./node_modules/proj4/lib/common/sinh.js","webpack:///./node_modules/proj4/lib/common/hypot.js","webpack:///./node_modules/proj4/lib/common/log1py.js","webpack:///./node_modules/proj4/lib/common/asinhy.js","webpack:///./node_modules/proj4/lib/common/gatg.js","webpack:///./node_modules/proj4/lib/common/clens.js","webpack:///./node_modules/proj4/lib/common/cosh.js","webpack:///./node_modules/proj4/lib/common/clens_cmplx.js","webpack:///./node_modules/proj4/lib/projections/etmerc.js","webpack:///./node_modules/proj4/lib/common/adjust_zone.js","webpack:///./node_modules/proj4/lib/projections/utm.js","webpack:///./node_modules/proj4/lib/common/srat.js","webpack:///./node_modules/proj4/lib/projections/gauss.js","webpack:///./node_modules/proj4/lib/projections/sterea.js","webpack:///./node_modules/proj4/lib/projections/stere.js","webpack:///./node_modules/proj4/lib/projections/somerc.js","webpack:///./node_modules/proj4/lib/projections/omerc.js","webpack:///./node_modules/proj4/lib/projections/lcc.js","webpack:///./node_modules/proj4/lib/projections/krovak.js","webpack:///./node_modules/proj4/lib/common/mlfn.js","webpack:///./node_modules/proj4/lib/common/e0fn.js","webpack:///./node_modules/proj4/lib/common/e1fn.js","webpack:///./node_modules/proj4/lib/common/e2fn.js","webpack:///./node_modules/proj4/lib/common/e3fn.js","webpack:///./node_modules/proj4/lib/common/gN.js","webpack:///./node_modules/proj4/lib/common/adjust_lat.js","webpack:///./node_modules/proj4/lib/common/imlfn.js","webpack:///./node_modules/proj4/lib/projections/cass.js","webpack:///./node_modules/proj4/lib/common/qsfnz.js","webpack:///./node_modules/proj4/lib/projections/laea.js","webpack:///./node_modules/proj4/lib/common/asinz.js","webpack:///./node_modules/proj4/lib/projections/aea.js","webpack:///./node_modules/proj4/lib/projections/gnom.js","webpack:///./node_modules/proj4/lib/common/iqsfnz.js","webpack:///./node_modules/proj4/lib/projections/cea.js","webpack:///./node_modules/proj4/lib/projections/eqc.js","webpack:///./node_modules/proj4/lib/projections/poly.js","webpack:///./node_modules/proj4/lib/projections/nzmg.js","webpack:///./node_modules/proj4/lib/projections/mill.js","webpack:///./node_modules/proj4/lib/projections/sinu.js","webpack:///./node_modules/proj4/lib/projections/moll.js","webpack:///./node_modules/proj4/lib/projections/eqdc.js","webpack:///./node_modules/proj4/lib/projections/vandg.js","webpack:///./node_modules/proj4/lib/projections/aeqd.js","webpack:///./node_modules/proj4/lib/projections/ortho.js","webpack:///./node_modules/proj4/lib/projections/qsc.js","webpack:///./node_modules/proj4/lib/projections/robin.js","webpack:///./node_modules/proj4/lib/projections/geocent.js","webpack:///./node_modules/proj4/projs.js","webpack:///./node_modules/proj4/lib/index.js","webpack:///node_modules/@phila/vue-mapping/src/cyclomedia/Widget.vue","webpack:///./node_modules/@phila/vue-mapping/src/cyclomedia/Widget.vue?c9ef","webpack:///./node_modules/@phila/vue-mapping/src/cyclomedia/Widget.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","class","widgetClass","attrs","isMobileOrTablet","popoutAble","style","right","popoutPosition","on","popoutClicked","staticClass","_e","_t","ref","staticRenderFns","defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","to_meter","ignoredChar","match","obj","key","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","i","length","paramName","paramVal","paramOutname","self","paramObj","defData","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","level","place","root","stack","currentObject","state","parseString","txt","parser","output","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","rename","outName","inName","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","AXIS","axisOrder","ii","descriptor","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ratio","slice","sphere","ellps","TOWGS84","isFinite","renamer","list","forEach","lisp","that","arguments","def","charAt","apply","EPSG","ESRI","IAU2000","console","log","global","testObj","code","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","property","destination","source","undefined","con","eccent","sinphi","cosphi","sqrt","x","abs","sign","com","pow","tan","phi","dphi","eccnth","atan","ts","sin","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","n","get","start","ellipseName","eccentricity","a2","b2","ep2","ellipse","datum_type","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","sphere_","ecc","datumObj","extend","Proj","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","point","t","xin","yin","zin","denorm","crs","array","m","checkCoord","num","Number","TypeError","checkNotWGS","transform","toPoint","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","NaN","concat","splice","checkProj","oProj","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","I","O","ll","accuracy","encode","LLtoUTM","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","top","degToRad","deg","radToDeg","rad","LongOrigin","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","LongRad","floor","UTMEasting","UTMNorthing","northing","round","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","N1","T1","C1","R1","D","mu","phi1Rad","e1","result","topRight","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","twoLetter","String","fromCharCode","mgrsString","testChar","hunK","sb","substring","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","warn","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","cphi","sphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","r","max","min","log1py","hypot","cos_2B","B","pp","h1","h2","hr","arg_r","hr1","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","arg_i","cosh_arg_i","cosh","j","hi1","hi","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","isNaN","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","no_off","no_rot","bl","fl","gl","t0","dl","t1","t2","el","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","asq","cl","dd","ml1","phi1","imlfn","nl1","rl1","tl1","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","V","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","F","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","offset","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","proj4","tmerc","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","defaultDatum","version","props","data","computed","$store","fullScreenMapEnabled","fullScreenTopicsEnabled","answer","$config","cyclomedia","cyclomediaInitializationBegun","initializationBegun","cyclomediaInitializationComplete","initializationComplete","cyclomediaActive","active","pictometryActive","pictometry","fullScreenCycloEnabled","$props","orientation","leftPanel","locForCyclo","geocodeData","latLngFromMap","mapCenter","center","navBarOpen","projection4326","projection2272","watch","setDivWidth","newCoords","setNewLocation","StreetSmartApi","targetElement","$refs","cycloviewer","username","password","apiKey","srs","locale","addressSettings","database","window","addEventListener","newActiveStatus","mounted","$emit","updated","panoramaViewer","rotateRight","methods","docWidth","divWidth","open","coords2272","viewerType","closable","maximizable","overlay","id","visible","viewer","toggleOverlay","sendOrientationToStore","yaw","commit","hFov","$nextTick","lng","component"],"mappings":"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","file":"static/js/mbmb_pvm_CyclomediaWidget.js","sourcesContent":["import mod from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Widget.vue?vue&type=style&index=0&id=18b5dde8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Widget.vue?vue&type=style&index=0&id=18b5dde8&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.widgetClass,attrs:{\"id\":\"cyclomedia-container\"}},[(_vm.isMobileOrTablet === false && _vm.popoutAble === true)?_c('div',{style:({ right: _vm.popoutPosition }),attrs:{\"id\":\"inCycloDiv\"},on:{\"click\":_vm.popoutClicked}},[_c('font-awesome-icon',{staticClass:\"popout-icon\",attrs:{\"icon\":\"external-link-alt\"}})],1):_vm._e(),_vm._t(\"default\"),_c('div',{ref:\"cycloviewer\",staticClass:\"panoramaViewerWindow\",attrs:{\"id\":\"cycloviewer\"}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = wkt.AXIS[i];\n      var descriptor = axis[0].toLowerCase();\n      if (descriptor.indexOf('north') !== -1) {\n        axisOrder += 'n';\n      } else if (descriptor.indexOf('south') !== -1) {\n        axisOrder += 's';\n      } else if (descriptor.indexOf('east') !== -1) {\n        axisOrder += 'e';\n      } else if (descriptor.indexOf('west') !== -1) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n    case 'w':\n    case 'n':\n    case 's':\n      out[t] = v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function (coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","<template>\r\n  <div\r\n    id=\"cyclomedia-container\"\r\n    :class=\"widgetClass\"\r\n  >\r\n    <!-- class=\"cyclo-div\" -->\r\n    <div\r\n      v-if=\"isMobileOrTablet === false && popoutAble === true\"\r\n      id=\"inCycloDiv\"\r\n      :style=\"{ right: popoutPosition }\"\r\n      @click=\"popoutClicked\"\r\n    >\r\n      <font-awesome-icon\r\n        icon=\"external-link-alt\"\r\n        class=\"popout-icon\"\r\n      />\r\n    </div>\r\n    <slot />\r\n    <div\r\n      id=\"cycloviewer\"\r\n      ref=\"cycloviewer\"\r\n      class=\"panoramaViewerWindow\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport proj4 from 'proj4';\r\n\r\nexport default {\r\n  name: 'CyclomediaWidget',\r\n  props: [\r\n    'screenPercent',\r\n    'orientation',\r\n  ],\r\n  data() {\r\n    return {\r\n      'docWidth': 0,\r\n      'divWidth': 0,\r\n      'popoutPosition': 0,\r\n    };\r\n  },\r\n  computed: {\r\n    isMobileOrTablet() {\r\n      return this.$store.state.isMobileOrTablet;\r\n    },\r\n    fullScreenMapEnabled() {\r\n      return this.$store.state.fullScreenMapEnabled;\r\n    },\r\n    fullScreenTopicsEnabled() {\r\n      return this.$store.state.fullScreenTopicsEnabled;\r\n    },\r\n    popoutAble() {\r\n      let answer;\r\n      if (this.$config.cyclomedia.popoutAble === false) {\r\n        answer = false;\r\n      } else {\r\n        answer = true;\r\n      }\r\n      return answer;\r\n    },\r\n    cyclomediaInitializationBegun() {\r\n      return this.$store.state.cyclomedia.initializationBegun;\r\n    },\r\n    cyclomediaInitializationComplete() {\r\n      return this.$store.state.cyclomedia.initializationComplete;\r\n    },\r\n    cyclomediaActive() {\r\n      return this.$store.state.cyclomedia.active;\r\n    },\r\n    pictometryActive() {\r\n      return this.$store.state.pictometry.active;\r\n    },\r\n    widgetClass() {\r\n      let value;\r\n\r\n      if (this.$store.state.fullScreenCycloEnabled || this.$props.orientation === 'full-screen') {\r\n        value = \"medium-24 small-24 height100 fullScreen-cyclo\";\r\n      } else if (this.$props.orientation === 'vertical') {\r\n        if (this.$store.state.leftPanel) {\r\n          value = \"medium-24 small-24 height50\";\r\n        } else {\r\n          value = \"medium-12 small-24 height100\";\r\n        }\r\n      } else {\r\n        if (this.pictometryActive) {\r\n          value = 'medium-16 large-16 height50 columns';\r\n        } else {\r\n          value = 'medium-24 large-24 height50 columns';\r\n        }\r\n      }\r\n\r\n      if (this.fullScreenTopicsEnabled) {\r\n        value += ' full-topics-open';\r\n      }\r\n\r\n      // if (this.$props.orientation === 'horizontal') {\r\n      //   value = 'height50';\r\n      // } else {\r\n      //   value = 'cyclo-div';\r\n      // }\r\n\r\n      return value;\r\n    },\r\n    locForCyclo() {\r\n      // console.log('computing locForCyclo');\r\n      const geocodeData = this.$store.state.geocode.data;\r\n      // const map = this.$store.state.map.map;\r\n      if (geocodeData) {\r\n        return [ geocodeData.geometry.coordinates[1], geocodeData.geometry.coordinates[0] ];\r\n      }\r\n      return [];\r\n    },\r\n    latLngFromMap() {\r\n      return this.$store.state.cyclomedia.latLngFromMap;\r\n    },\r\n    mapCenter() {\r\n      return this.$store.state.map.center;\r\n    },\r\n    navBarOpen() {\r\n      return this.$store.state.cyclomedia.navBarOpen;\r\n    },\r\n    projection4326() {\r\n      return \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\r\n    },\r\n    projection2272() {\r\n      return \"+proj=lcc +lat_1=40.96666666666667 +lat_2=39.93333333333333 +lat_0=39.33333333333334 +lon_0=-77.75 +x_0=600000 +y_0=0 +ellps=GRS80 +datum=NAD83 +to_meter=0.3048006096012192 +no_defs\";\r\n    },\r\n    // surfaceCursorOn() {\r\n    //   return this.$store.state.cyclomedia.surfaceCursorOn;\r\n    // }\r\n  },\r\n  watch: {\r\n    fullScreenMapEnabled() {\r\n      this.setDivWidth();\r\n    },\r\n    locForCyclo(newCoords) {\r\n      // console.log('watch locForCyclo is firing, setNewLocation running with newCoords:', newCoords);\r\n      if (newCoords && this.cyclomediaInitializationComplete) {\r\n        this.setNewLocation(newCoords);\r\n      }\r\n    },\r\n    latLngFromMap(newCoords) {\r\n      // console.log('watch latLngFromMap is firing, setNewLocation running with newCoords:', newCoords);\r\n      if (this.cyclomediaInitializationComplete) {\r\n\r\n        if (Array.isArray(newCoords)) {\r\n          // console.log('it is an array');\r\n          this.setNewLocation([ newCoords[1], newCoords[0] ]);\r\n        } else {\r\n          // console.log('it is not an array');\r\n          this.setNewLocation([ newCoords.lat, newCoords.lng ]);\r\n        }\r\n      }\r\n    },\r\n    // docWidthComp() {\r\n    //   console.log('docWidth changed');\r\n    // }\r\n    cyclomediaInitializationBegun() {\r\n      console.log('watch cyclomediaInitializationBegun is running');\r\n      StreetSmartApi.init({\r\n        targetElement: this.$refs.cycloviewer,\r\n        username: this.$config.cyclomedia.username,\r\n        password: this.$config.cyclomedia.password,\r\n        apiKey: this.$config.cyclomedia.apiKey,\r\n        // srs: 'EPSG:4326',\r\n        srs: 'EPSG:2272',\r\n        locale: 'en-us',\r\n        addressSettings: {\r\n          locale: 'en-us',\r\n          database: 'CMDatabase',\r\n        },\r\n      }).then (\r\n        () => {\r\n          // get map center and set location\r\n          let latLng;\r\n          if (this.$store.state.cyclomedia.latLngFromMap) {\r\n            latLng = this.$store.state.cyclomedia.latLngFromMap;\r\n          } else {\r\n            latLng = [ 39.953338, -75.163471 ];\r\n          }\r\n          this.$store.commit('setCyclomediaInitilizationComplete', true);\r\n          this.setNewLocation([ latLng[0], latLng[1] ]);\r\n        },\r\n        err => {\r\n          console.log('Api: init: failed. Error: ', err);\r\n        },\r\n      );\r\n      window.addEventListener('resize', this.setDivWidth);\r\n    },\r\n    cyclomediaActive(newActiveStatus) {\r\n      // console.log('cyclomediaActive watch is firing');\r\n      this.setDivWidth();\r\n      if (newActiveStatus === true && this.cyclomediaInitializationComplete) {\r\n        this.setNewLocation([ this.latLngFromMap[1], this.latLngFromMap[0] ]);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    console.log('cyclomedia widget mounted');\r\n    this.$emit('cyclomedia-widget-mounted');\r\n  },\r\n  updated() {\r\n    // console.log('cyclomedia updated running');\r\n    // TODO find a better way to get the image to update and not be stretched\r\n    // const viewer = this.$store.state.cyclomedia.viewer;\r\n    if (this.cyclomediaActive) {\r\n      if (window.panoramaViewer) {\r\n        window.panoramaViewer.rotateRight(0.0000001);\r\n      }\r\n    }\r\n    this.setDivWidth();\r\n  },\r\n  methods: {\r\n    setDivWidth() {\r\n      console.log('Cyclomedia Widget setDivWidth is running');\r\n      const docWidth = document.body.clientWidth;\r\n      this.docWidth = docWidth;\r\n      const el = document.getElementById('cyclomedia-container');\r\n      const divStyle = window.getComputedStyle(el);\r\n      const divWidth = parseFloat(divStyle.getPropertyValue('width').replace('px', ''));\r\n      this.divWidth = divWidth;\r\n      // console.log('setDivWidth is running, docWidth:', docWidth, 'divWidth', divWidth);\r\n      let answer;\r\n      if (this.fullScreenMapEnabled || docWidth < 750) {\r\n        // console.log('setDivWidth is running, first option')\r\n        answer = docWidth - divWidth + 'px';\r\n      } else {\r\n        // console.log('setDivWidth is running, second option')\r\n        answer = docWidth - (docWidth/this.$props.screenPercent + divWidth) + 'px';\r\n      }\r\n      // console.log('setDivWidth, answer:', answer);\r\n      this.popoutPosition = answer;\r\n      // return width;\r\n    },\r\n    setNewLocation(coords) {\r\n      // console.log('cyclomedia setNewLocation is running using', coords);\r\n      if (!coords) {\r\n        return;\r\n      }\r\n      const viewerType = StreetSmartApi.ViewerType.PANORAMA;\r\n      const coords2272 = proj4(this.projection4326, this.projection2272, [ coords[1], coords[0] ]);\r\n      // StreetSmartApi.open(center.lng + ',' + center.lat, {\r\n      // StreetSmartApi.open(coords[1] + ',' + coords[0], {\r\n      // if (this.cyclomediaInitializationBegun) {\r\n      StreetSmartApi.open(coords2272[0] + ',' + coords2272[1], {\r\n        viewerType: viewerType,\r\n        srs: 'EPSG:2272',\r\n        // srs: 'EPSG:4326',\r\n        panoramaViewer: {\r\n          closable: false,\r\n          maximizable: false,\r\n        },\r\n      }).then (\r\n        function(result) {\r\n          // console.log('StreetSmartApi2, result:', result);\r\n          const viewer = result[0];\r\n          const widget = this;\r\n          // console.log('Created component through API:', result, 'widget:', widget, 'viewer:', viewer);\r\n          if (viewer) {\r\n            const expanded = viewer.getNavbarExpanded();\r\n            // console.log('expanded:', expanded);\r\n            viewer.toggleNavbarExpanded(widget.navBarOpen);\r\n            viewer.toggleButtonEnabled('panorama.elevation', false);\r\n            viewer.toggleButtonEnabled('panorama.reportBlurring', false);\r\n\r\n            for (let overlay of viewer.props.overlays) {\r\n              if (overlay.id === 'surfaceCursorLayer') {\r\n                if (overlay.visible === true) {\r\n                  viewer.toggleOverlay(overlay);\r\n                }\r\n              }\r\n            }\r\n\r\n            if (!this.$config.cyclomedia.measurementAllowed || this.$config.cyclomedia.measurementAllowed === 'false') {\r\n              StreetSmartApi.removeOverlay('measurementLayer');\r\n              viewer.toggleButtonEnabled('panorama.measure', false);\r\n            }\r\n\r\n            viewer.on('VIEW_CHANGE', function(e) {\r\n              // console.log('on VIEW_CHANGE fired, type:', e.type, 'detail:', e.detail);\r\n              if (e.detail.yaw !== widget.$store.state.cyclomedia.orientation.yaw ||\r\n                    viewer.props.orientation.xyz !== widget.$store.state.cyclomedia.orientation.xyz\r\n              ) {\r\n                // console.log('on VIEW_CHANGE fired with yaw change, viewer.props.orientation:', viewer.props.orientation);\r\n                widget.sendOrientationToStore(e.detail, viewer.props.orientation.xyz);\r\n              } else if (viewer.getNavbarExpanded() !== this.navBarOpen) {\r\n                widget.$store.commit('setCyclomediaNavBarOpen', viewer.getNavbarExpanded());\r\n              }\r\n            });\r\n\r\n            viewer.on('VIEW_LOAD_END', function(e) {\r\n              // console.log('on VIEW_LOAD_END fired, type:', e.type, 'e:', e, 'viewer.props.orientation:', viewer.props.orientation);\r\n              if (viewer.props.orientation.xyz !== widget.$store.state.cyclomedia.orientation.xyz) {\r\n                widget.sendOrientationToStore(e, viewer.props.orientation.xyz);\r\n              } else if (viewer.getNavbarExpanded() !== this.navBarOpen) {\r\n                widget.$store.commit('setCyclomediaNavBarOpen', viewer.getNavbarExpanded());\r\n              }\r\n            });\r\n          }\r\n        }.bind(this),\r\n      ).catch(\r\n        function(reason) {\r\n          // console.log('Failed to create component(s) through API: ' + reason);\r\n        },\r\n      );\r\n\r\n      // const viewer = this.$store.state.cyclomedia.viewer;\r\n      // viewer.openByCoordinate(coords);\r\n    },\r\n    sendOrientationToStore(e, xyz) {\r\n      if (e.yaw) {\r\n        this.$store.commit('setCyclomediaYaw', e.yaw);\r\n        this.$store.commit('setCyclomediaHFov', e.hFov);\r\n      }\r\n      const xy = [ xyz[0], xyz[1] ];\r\n      // console.log('sendOrientationToStore, e:', e, 'xyz:', xyz, 'xy:', xy);\r\n      const lnglat = proj4(this.projection2272, this.projection4326, xy);\r\n      // console.log('sendOrientationToStore is running, xyz:', xyz, 'lnglat:', lnglat);\r\n      this.$nextTick(() => {\r\n        this.$store.commit('setCyclomediaXyz', lnglat);\r\n      });\r\n    },\r\n    popoutClicked() {\r\n      const map = this.$store.state.map.map;\r\n      const center = map.getCenter();\r\n      window.open('//cyclomedia.phila.gov/#/?lat=' + center.lat + '&lng=' + center.lng, '_blank');\r\n      this.$store.commit('setCyclomediaActive', false);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.cyclo-div {\r\n  height: 100%;\r\n}\r\n\r\n/* #cycloviewer {\r\n  position: absolute;\r\n} */\r\n\r\n#cyclomedia-container {\r\n  padding: 0px;\r\n}\r\n\r\n.full-topics-open {\r\n  display: none;\r\n}\r\n\r\n.height100 {\r\n  height: 100%;\r\n}\r\n\r\n.height50 {\r\n  /* padding-top: 50%; */\r\n  height: 50%;\r\n}\r\n\r\n@media screen and (min-width: 46.875em) {\r\n  #cyclo-container {\r\n    display: block;\r\n  }\r\n}\r\n\r\n@media (max-width: 749px) {\r\n  .fullScreen-cyclo {\r\n    height: 100% !important;\r\n  }\r\n\r\n  #cyclo-container {\r\n    height: 200px;\r\n  }\r\n}\r\n\r\n#inCycloDiv {\r\n  /* position: absolute; */\r\n  position: absolute;\r\n  /* top: 0px; */\r\n  right: 40px;\r\n  /* float: right; */\r\n  background-color: white;\r\n  border: 0px solid;\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor:pointer;\r\n  z-index: 10;\r\n}\r\n\r\n.popout-icon {\r\n  margin-top: 8.5px;\r\n  font-size: 15px;\r\n  margin-left: 8.5px;\r\n}\r\n\r\n.panoramaViewerWindow {\r\n  display: block;\r\n  width: 100%;\r\n  height:100%;\r\n}\r\n\r\n@media screen and (max-width: 46.875em) {\r\n  .cyclo-container {\r\n    /* display: none; */\r\n  }\r\n}\r\n\r\n</style>\r\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Widget.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./Widget.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Widget.vue?vue&type=template&id=18b5dde8&scoped=true&\"\nimport script from \"./Widget.vue?vue&type=script&lang=js&\"\nexport * from \"./Widget.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Widget.vue?vue&type=style&index=0&id=18b5dde8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"18b5dde8\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}