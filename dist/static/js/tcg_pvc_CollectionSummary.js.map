{"version":3,"sources":["webpack:///./node_modules/@phila/pinboard/node_modules/@phila/vue-comps/src/components/CollectionSummary.vue?8399","webpack:///node_modules/@phila/pinboard/node_modules/@phila/vue-comps/src/components/CollectionSummary.vue","webpack:///./node_modules/@phila/pinboard/node_modules/@phila/vue-comps/src/components/CollectionSummary.vue?0170","webpack:///./node_modules/@phila/pinboard/node_modules/@phila/vue-comps/src/components/CollectionSummary.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","_s","summary","staticRenderFns","mixins","computed","contextSingular","context","singular","contextPlural","plural","descriptorSingular","descriptor","descriptorPlural","naturalList","Array","isArray","items","len","join","valueQuantities","obj","val","methods","isPlural","values","length","quantity","naturalizeQuantities","includeZeroes","acc","labelWithNumber","labelPlural","labelSingular","push","quantityWithLabel","quantities","component"],"mappings":"kIAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,KAAK,CAACJ,EAAIM,GAAG,IAAIN,EAAIO,GAAGP,EAAIQ,SAAS,QACpIC,EAAkB,G,gECUtB,GACEC,OAAQ,CAAC,EAAX,MACEC,SAAU,CAERH,QAFJ,WAIM,IAAN,uBAEA,mBAEA,oCACA,UAEA,mBAEA,OAEM,OAAOA,GAETI,gBAjBJ,WAmBM,IAAN,uBACM,OAAOC,EAAQC,UAAYD,GAE7BE,cAtBJ,WAuBM,IAAN,uBAEM,OAAOF,EAAQG,QAAUH,GAE3BI,mBA3BJ,WA4BM,IAAN,0BACM,OAAOC,EAAWJ,UAAYI,GAEhCC,iBA/BJ,WAgCM,IAAN,0BACM,OAAOD,EAAWF,QAAUE,EAAa,KAI3CE,YArCJ,WAsCM,IAAN,uBACA,+BAEA,WACM,GAAIC,MAAMC,QAAQC,IAAUC,EAAM,EAAG,CACnC,GAAY,IAARA,EACF,OAAOD,EAAM,GACvB,SACU,OAAOA,EAAME,KAAK,SAEpB,IAAR,mCACA,gBACQ,MAAO,GAAf,6BAGM,MAAO,MAAb,+BAEIC,gBAvDJ,WAwDM,IAAN,sCACM,GAAKH,EAAL,CAGA,IAAN,wBAGA,0BACQ,IAAR,OAGQ,OAFAI,EAAIC,GAAOD,EAAIC,IAAQ,EACvBD,EAAIC,KACGD,IACf,IAEM,OAAOD,KAGXG,QAAS,CAGPC,SAHJ,WAGA,gEACA,iBACM,GAAsB,IAAlBC,EAAOC,OAAc,CACvB,IAAR,OACA,OACQ,GAAiB,IAAbC,EACF,OAAO,EAGX,OAAO,GAITC,qBAhBJ,WAgBA,uEAEA,qBACA,6BAGA,0BACQ,IAAR,UACA,UAEQ,GAAiB,IAAbD,EAAgB,CAClB,IAAKE,EACH,OAAOC,EAGTH,EAAW,KAGb,IACR,EADA,UAIQ,GAAiB,IAAbA,GAAZ,oCACU,IAAV,kBACUI,EAAkBC,OAGlBD,EAAkBE,EAIpB,IAAR,6BAGQ,OAFAH,EAAII,KAAKC,GAEFL,IACf,IAEM,OAAOM,KC3IwV,I,YCOjWC,EAAY,eACd,EACA5C,EACAU,GACA,EACA,KACA,WACA,MAIa,aAAAkC,E","file":"static/js/tcg_pvc_CollectionSummary.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',[_vm._v(\" \"+_vm._s(_vm.summary)+\" \")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- A natural-language summary of a collection of things. -->\r\n\r\n<template>\r\n  <h3>\r\n    {{ summary }}\r\n  </h3>\r\n</template>\r\n\r\n<script>\r\nimport TopicComponent from './TopicComponent.vue';\r\n\r\nexport default {\r\n  mixins: [ TopicComponent ],\r\n  computed: {\r\n    // the final stringified output\r\n    summary() {\r\n      // get value quantity map\r\n      const valueQuantities = this.valueQuantities;\r\n      // check if plural\r\n      const isPlural = this.isPlural(valueQuantities);\r\n      // get context renderer\r\n      const contextFnKey = 'context' + (isPlural ? 'Plural' : 'Singular');\r\n      const contextFn = this[contextFnKey];\r\n      // get a natural list\r\n      const naturalList = this.naturalList;\r\n      // summarize\r\n      const summary = contextFn(naturalList);\r\n\r\n      return summary;\r\n    },\r\n    contextSingular() {\r\n      // console.log('contextSingular is running');\r\n      const context = this.options.context;\r\n      return context.singular || context;\r\n    },\r\n    contextPlural() {\r\n      const context = this.options.context;\r\n      // console.log('contextPlural, context.plural:', context.plural);\r\n      return context.plural || context;\r\n    },\r\n    descriptorSingular() {\r\n      const descriptor = this.options.descriptor;\r\n      return descriptor.singular || descriptor;\r\n    },\r\n    descriptorPlural() {\r\n      const descriptor = this.options.descriptor;\r\n      return descriptor.plural || descriptor + 's';\r\n    },\r\n    // serializes naturalized quantities into a list\r\n    // e.g. \"1 apple and 2 oranges\"\r\n    naturalList() {\r\n      const valueQuantities = this.valueQuantities;\r\n      const items = this.naturalizeQuantities(valueQuantities);\r\n      // console.log('in naturalList, items:', items);\r\n      const len = items.length;\r\n      if (Array.isArray(items) && len > 0) {\r\n        if (len === 1) {\r\n          return items[0];\r\n        } else if (len === 2) {\r\n          return items.join(' and ');\r\n        }\r\n        const leadingItems = items.slice(0, items.length - 1).join(', ');\r\n        const lastItem = items[items.length - 1];\r\n        return `${leadingItems}, and ${lastItem}`;\r\n      }\r\n      // TODO should this text be an option?\r\n      return `no ${this.descriptorPlural}`;\r\n    },\r\n    valueQuantities() {\r\n      const items = this.slots.items(this.$store.state);\r\n      if (!items) {\r\n        return;\r\n      }\r\n      const getValue = this.options.getValue;\r\n\r\n      // make an object of value => quantity\r\n      const valueQuantities = items.reduce((obj, item) => {\r\n        const val = getValue(item);\r\n        obj[val] = obj[val] || 0;\r\n        obj[val]++;\r\n        return obj;\r\n      }, {});\r\n\r\n      return valueQuantities;\r\n    },\r\n  },\r\n  methods: {\r\n    // takes the value of the valueQuantities computed property and returns\r\n    // the appropriate grammatical number.\r\n    isPlural(valueQuantities = {}) {\r\n      const values = Object.keys(valueQuantities);\r\n      if (values.length === 1) {\r\n        const firstValue = values[0];\r\n        const quantity = valueQuantities[firstValue];\r\n        if (quantity === 1) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    },\r\n    // takes the value quantity map and converts values to natural language\r\n    // quantities (e.g. {apple: 2} => \"2 apples\")\r\n    naturalizeQuantities(valueQuantities = {}) {\r\n      // get some options\r\n      const types = this.options.types;\r\n      const includeZeroes = this.options.includeZeroes;\r\n\r\n      // convert to natural language and sort per order of types option\r\n      const quantities = types.reduce((acc, type) => {\r\n        const value = type.value;\r\n        let quantity = valueQuantities[value] || 0;\r\n\r\n        if (quantity === 0) {\r\n          if (!includeZeroes) {\r\n            return acc;\r\n          }\r\n          // natural zero => \"no\"\r\n          quantity = 'no';\r\n        }\r\n\r\n        const labelSingular = type.label;\r\n        let labelWithNumber;\r\n\r\n        // singular\r\n        if (quantity !== 1  && this.options.context.pluralizeList != false) {\r\n          const labelPlural = type.plural || labelSingular + 's';\r\n          labelWithNumber = labelPlural;\r\n          // plural\r\n        } else {\r\n          labelWithNumber = labelSingular;\r\n        }\r\n\r\n        // make label and push\r\n        const quantityWithLabel = `${quantity} ${labelWithNumber}`;\r\n        acc.push(quantityWithLabel);\r\n\r\n        return acc;\r\n      }, []);\r\n\r\n      return quantities;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../../../../thread-loader/dist/cjs.js!../../../../../../../babel-loader/lib/index.js!../../../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./CollectionSummary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../../../../thread-loader/dist/cjs.js!../../../../../../../babel-loader/lib/index.js!../../../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../../../vue-loader/lib/index.js??vue-loader-options!./CollectionSummary.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CollectionSummary.vue?vue&type=template&id=1be5158c&scoped=true&\"\nimport script from \"./CollectionSummary.vue?vue&type=script&lang=js&\"\nexport * from \"./CollectionSummary.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1be5158c\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}