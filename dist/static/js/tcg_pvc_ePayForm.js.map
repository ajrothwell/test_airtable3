{"version":3,"sources":["webpack:///./node_modules/@phila/vue-comps/src/components/ePayForm.vue?1b40","webpack:///./node_modules/@phila/vue-comps/src/util/generate-billing-xml.js","webpack:///node_modules/@phila/vue-comps/src/components/ePayForm.vue","webpack:///./node_modules/@phila/vue-comps/src/components/ePayForm.vue?d926","webpack:///./node_modules/@phila/vue-comps/src/components/ePayForm.vue","webpack:///./node_modules/escape-html/index.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","actionAddress","domProps","xmlData","directives","name","rawName","value","expression","staticClass","style","$props","slots","text","staticRenderFns","data","console","log","address","zipCode","Object","keys","length","timestamp","format","Date","xmlString","balances","accountNum","totalDue","property","ownerName","streetAddress","escapeHtml","mixins","parseData","$store","state","sources","tips","buttonStyle","options","height","computed","geocode","properties","zip_code","message","evaluateSlot","class","shouldShowButton","created","calculateTotalDue","commit","mounted","$data","methods","years","reduce","acc","yearTotal","calculateTotalForYear","amounts","component","matchHtmlRegExp","string","escape","str","match","exec","html","index","lastIndex","charCodeAt","substring","module","exports"],"mappings":"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","file":"static/js/tcg_pvc_ePayForm.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('form',{attrs:{\"action\":_vm.actionAddress,\"method\":\"post\",\"target\":\"_blank\"}},[_c('input',{attrs:{\"name\":\"billStmt\",\"type\":\"hidden\"},domProps:{\"value\":_vm.xmlData}}),_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.shouldShowButton),expression:\"shouldShowButton\"}],staticClass:\"button external\",style:(_vm.buttonStyle),attrs:{\"type\":\"submit\"},domProps:{\"value\":this.$props.slots.text}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { format, formatISO } from 'date-fns';\nimport escapeHtml from 'escape-html';\n\n/*\n  this is a helper fn that accepts a data object containing the following:\n\n    - accountNum <String>\n    - amountDue <Number>\n    - owner <String>\n    - address <Object>\n      - streetAddress <String>\n      - city <String>\n      - state <String>\n      - postalCode <String>\n      - country <String>\n\n  and returns a serialized xml object which the epay gateway can accept for\n  initiating a purchase.\n\n  REVIEW does this need to handle credits?\n*/\n\nexport default function (data) {\n  console.log('pvc generate billing xml, data:', data, 'data.address.zipCode:', data.address.zipCode);\n\n  // if data object is empty, return empty string\n  if (Object.keys(data).length < 1) {\n    return '';\n  }\n\n  // get the current date/time in iso format with timezone\n  // let timestamp = formatISO(new Date());\n  let timestamp = format(new Date(), \"yyyy-MM-dd'T'HH:mm:ssxxx\");\n  console.log('timestamp in pvc gb:', timestamp);\n\n  // TODO use a json to xml lib instead of forming this string?\n  const xmlString = `<?xml version=\"1.0\" encoding=\"utf-16\"?>\n<BillingStatement xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n  <ApplicationID>fcd68fd2-e923-4b03-a0e7-a678c2ed612a</ApplicationID>\n  <AccountNumber />\n  <BillNumber>${data.balances.accountNum}</BillNumber>\n  <StatementNumber />\n  <BillingDate>${timestamp}</BillingDate>\n  <DueDate>${timestamp}</DueDate>\n  <TotalDue>${data.totalDue}</TotalDue>\n  <DepartMentId>0</DepartMentId>\n  <Fund>0</Fund>\n  <PaymentDate>0001-01-01T00:00:00</PaymentDate>\n  <Quantity>0</Quantity>\n  <ItemAmount>0</ItemAmount>\n  <TotalAmountdue>0</TotalAmountdue>\n  <PartialPaymentFlag>false</PartialPaymentFlag>\n  <ReceiptpresentFlag>false</ReceiptpresentFlag>\n  <Details>\n    <BillingStatementDetail>\n      <ItemDate>${timestamp}</ItemDate>\n      <ItemDescription>Real Estate Tax</ItemDescription>\n      <Charges>${data.totalDue}</Charges>\n      <Credits>0</Credits>\n    </BillingStatementDetail>\n  </Details>\n  <Customers>\n    <Customer>\n      <FirstName>${data.balances.property.ownerName}</FirstName>\n      <MiddleName />\n      <LastName />\n      <BillingAddress>\n        <Address>\n          <AddressLine1>${data.address.streetAddress}</AddressLine1>\n          <City>PHILADELPHIA</City>\n          <State>PA</State>\n          <PostalCode>${data.address.zipCode}</PostalCode>\n          <Country>US</Country>\n        </Address>\n      </BillingAddress>\n    </Customer>\n  </Customers>\n</BillingStatement>\n  `;\n\n  return escapeHtml(xmlString);\n}\n","<template>\n  <!-- <form action=\"https://test-secure.phila.gov/PaymentCenter/Gateway1/InitiatePurchase.aspx\" -->\n  <form\n    :action=\"actionAddress\"\n    method=\"post\"\n    target=\"_blank\"\n  >\n    <input\n      :value=\"xmlData\"\n      name=\"billStmt\"\n      type=\"hidden\"\n    >\n    <input\n      v-show=\"shouldShowButton\"\n      :value=\"this.$props.slots.text\"\n      :style=\"buttonStyle\"\n      type=\"submit\"\n      class=\"button external\"\n    >\n  </form>\n</template>\n\n<script>\nimport TopicComponent from './TopicComponent.vue';\nimport generateBillingXml from '../util/generate-billing-xml';\n\nconst BALANCE_PARTS = [\n  'principal',\n  'interest',\n  'penalty',\n  'other',\n];\n\nexport default {\n  mixins: [ TopicComponent ],\n  data() {\n    const data = {\n      parseData: {\n        'accountNum': this.$store.state.sources.tips.data.data.accountNum,\n        'totalDue': '',\n        'balances': this.$store.state.sources.tips.data.data,\n        'address': {\n          'streetAddress':  this.$store.state.sources.tips.data.data.property.address,\n          'zipCode': this.zipCode,\n        },\n      },\n      xmlData: {},\n      buttonStyle: 'height: ' + this.$props.options.height + 'px;\\\n         width: ' + this.$props.options.width + 'px;\\\n         font-size: ' + this.$props.options.fontSize + 'px;\\\n         ',\n      actionAddress: this.$props.options.actionAddress || 'https://test-secure.phila.gov/PaymentCenter/Gateway1/InitiatePurchase.aspx',\n    };\n    return data;\n  },\n  computed: {\n    // this was added to allow fetchData to run even without a geocode result\n    // for the real estate tax site which sometimes needs data from TIPS\n    // even if the property is not in OPA and AIS\n    zipCode() {\n      // console.log('ePayForm zipCode computed');\n      if (this.$store.state.geocode.data) {\n        return this.$store.state.geocode.data.properties.zip_code;\n      }\n      return '';\n\n    },\n    message() {\n      let value;\n      if (this.$props.slots) {\n        value = this.evaluateSlot(this.$props.slots.text);\n      }\n      return value;\n    },\n    class() {\n      let value;\n      if (this.$props.options) {\n        value = this.$props.options.class || '';\n      }\n      return value;\n    },\n    style() {\n      let value;\n      if (this.$props.options) {\n        value = this.$props.options.style || '';\n      }\n      return value;\n    },\n    shouldShowButton() {\n      if (this.parseData.totalDue > 0) {\n        return true;\n      }\n      return false;\n\n    },\n  },\n  created() {\n    // console.log('ePayForm created is running, this.zipCode:', this.zipCode)\n    this.parseData.totalDue = this.calculateTotalDue();\n    this.$store.commit('setPropertyBalance', this.parseData.totalDue);\n  },\n  mounted() {\n    // console.log('ePayForm mounted, this.zipCode:', this.zipCode);\n    this.$data.parseData.address.zipCode = this.zipCode;\n    this.xmlData = generateBillingXml(this.parseData);\n  },\n  methods: {\n    calculateTotalDue() {\n      return this.parseData.balances.years.reduce((acc, year) => {\n        const yearTotal = this.calculateTotalForYear(year);\n        return acc + yearTotal;\n      }, 0);\n    },\n    calculateTotalForYear(year) {\n      const amounts = BALANCE_PARTS.map(part => year[part]);\n      return amounts.reduce((acc, amount) => acc + amount, 0);\n    },\n  },\n};\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./ePayForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../vue-loader/lib/index.js??vue-loader-options!./ePayForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ePayForm.vue?vue&type=template&id=de516e46&scoped=true&\"\nimport script from \"./ePayForm.vue?vue&type=script&lang=js&\"\nexport * from \"./ePayForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"de516e46\",\n  null\n  \n)\n\nexport default component.exports","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n"],"sourceRoot":""}