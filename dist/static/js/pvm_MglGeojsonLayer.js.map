{"version":3,"sources":["webpack:///./node_modules/@phila/vue-mapping/src/mapbox/layer/layerMixin.js","webpack:///./node_modules/@phila/vue-mapping/src/mapbox/layer/GeojsonLayer.js","webpack:///./node_modules/@phila/vue-mapping/src/mapbox/lib/withEvents.js","webpack:///./node_modules/@phila/vue-mapping/src/mapbox/lib/layerEvents.js"],"names":["mapboxSourceProps","sourceId","type","String","required","source","Object","default","undefined","mapboxLayerStyleProps","layerId","layer","before","componentProps","clearSource","Boolean","replaceSource","replace","mixins","withEvents","props","inject","data","initial","computed","sourceLoaded","this","map","isSourceLoaded","mapLayer","getLayer","mapSource","getSource","created","minzoom","$watch","next","setLayerZoomRange","maxzoom","paint","keys","prop","setPaintProperty","deep","layout","setLayoutProperty","filter","setFilter","beforeDestroy","removeLayer","err","$_emitEvent","error","removeSource","methods","$_emitLayerMapEvent","event","$_emitMapEvent","$_bindLayerEvents","events","$listeners","forEach","eventName","includes","on","$_unbindEvents","off","$_watchSourceLoading","dataType","move","beforeId","moveLayer","remove","$destroy","render","name","mixin","getSourceFeatures","querySourceFeatures","getRenderedFeatures","geometry","queryRenderedFeatures","layers","getClusterExpansionZoom","clusterId","Promise","resolve","reject","Error","zoom","getClusterChildren","features","getClusterLeaves","args","console","log","setData","$_deferredMount","$props","loadImage","$attrs","icon","image","addImage","bind","addSource","$_addLayer","layerEvents","existed","id","addLayer","setFeatureState","featureId","state","params","getFeatureState","removeFeatureState","sourceLayer","key","$emit","component","mapboxEvent"],"mappings":"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","file":"static/js/pvm_MglGeojsonLayer.js","sourcesContent":["// import withRegistration from \"../../lib/withRegistration\";\nimport withEvents from \"../lib/withEvents\";\n\nconst mapboxSourceProps = {\n  sourceId: {\n    type: String,\n    required: true,\n  },\n  source: {\n    type: [ Object, String ],\n    default: undefined,\n  },\n};\n\nconst mapboxLayerStyleProps = {\n  layerId: {\n    type: String,\n    required: true,\n  },\n  layer: {\n    type: Object,\n    required: true,\n  },\n  before: {\n    type: String,\n    default: undefined,\n  },\n};\n\nconst componentProps = {\n  clearSource: {\n    type: Boolean,\n    default: true,\n  },\n  replaceSource: {\n    type: Boolean,\n    default: false,\n  },\n  replace: {\n    type: Boolean,\n    default: false,\n  },\n};\n\nexport default {\n  mixins: [ withEvents ],\n  props: {\n    ...mapboxSourceProps,\n    ...mapboxLayerStyleProps,\n    ...componentProps,\n  },\n\n  inject: [ \"mapbox\", \"map\" ],\n\n  data() {\n    return {\n      initial: true,\n    };\n  },\n\n  computed: {\n    sourceLoaded() {\n      return this.map ? this.map.isSourceLoaded(this.sourceId) : false;\n    },\n    mapLayer() {\n      return this.map ? this.map.getLayer(this.layerId) : null;\n    },\n    mapSource() {\n      return this.map ? this.map.getSource(this.sourceId) : null;\n    },\n  },\n\n  created() {\n    if (this.layer.minzoom) {\n      this.$watch(\"layer.minzoom\", function(next) {\n        if (this.initial) {\n          return;\n        }\n        this.map.setLayerZoomRange(this.layerId, next, this.layer.maxzoom);\n      });\n    }\n\n    if (this.layer.maxzoom) {\n      this.$watch(\"layer.maxzoom\", function(next) {\n        if (this.initial) {\n          return;\n        }\n        this.map.setLayerZoomRange(this.layerId, this.layer.minzoom, next);\n      });\n    }\n\n    if (this.layer.paint) {\n      this.$watch(\n        \"layer.paint\",\n        function(next) {\n          if (this.initial) {\n            return;\n          }\n          if (next) {\n            for (let prop of Object.keys(next)) {\n              this.map.setPaintProperty(this.layerId, prop, next[prop]);\n            }\n          }\n        },\n        { deep: true },\n      );\n    }\n\n    if (this.layer.layout) {\n      this.$watch(\n        \"layer.layout\",\n        function(next) {\n          if (this.initial) {\n            return;\n          }\n          if (next) {\n            for (let prop of Object.keys(next)) {\n              this.map.setLayoutProperty(this.layerId, prop, next[prop]);\n            }\n          }\n        },\n        { deep: true },\n      );\n    }\n\n    if (this.layer.filter) {\n      this.$watch(\n        \"layer.filter\",\n        function(next) {\n          if (this.initial) {\n            return;\n          }\n          this.map.setFilter(this.layerId, next);\n        },\n        { deep: true },\n      );\n    }\n\n    // if (this.layer.tiles) {\n    //   this.$watch(\n    //     \"layer\",\n    //     function(next) {\n    //       console.log('watch layer tiles is firing, next:', next);\n    //       if (this.initial) return;\n    //       // this.map.removeLayer(this.layerId);\n    //       this.map.addLayer(next);\n    //       // this.map.setFilter(this.layerId, next);\n    //     },\n    //     { deep: true }\n    //   );\n    // }\n  },\n\n  beforeDestroy() {\n    // console.log('layerMixin beforeDestroy is running, this.layerId:', this.layerId, 'this.clearSource:', this.clearSource, 'this.map:', this.map, 'this.map.loaded():', this.map.loaded());\n    // if (this.map && this.map.loaded()) {\n    try {\n      // console.log('layerMixin beforeDestroy if map and maploaded try is running')\n      this.map.removeLayer(this.layerId);\n    } catch (err) {\n      // console.log('layerMixin beforeDestroy error 1 is running')\n      this.$_emitEvent(\"layer-does-not-exist\", {\n        layerId: this.sourceId,\n        error: err,\n      });\n    }\n    if (this.clearSource) {\n      // console.log('layerMixin beforeDestroy if clearSource is running')\n      try {\n        // console.log('layerMixin beforeDestroy if clearSource try is running');\n        this.map.removeSource(this.sourceId);\n      } catch (err) {\n        this.$_emitEvent(\"source-does-not-exist\", {\n          sourceId: this.sourceId,\n          error: err,\n        });\n      }\n    }\n    // }\n  },\n\n  methods: {\n    $_emitLayerMapEvent(event) {\n      return this.$_emitMapEvent(event, { layerId: this.layerId });\n    },\n\n    $_bindLayerEvents(events) {\n      Object.keys(this.$listeners).forEach(eventName => {\n        if (events.includes(eventName)) {\n          this.map.on(eventName, this.layerId, this.$_emitLayerMapEvent);\n        }\n      });\n    },\n\n    $_unbindEvents(events) {\n      if (this.map) {\n        events.forEach(eventName => {\n          this.map.off(eventName, this.layerId, this.$_emitLayerMapEvent);\n        });\n      }\n    },\n\n    $_watchSourceLoading(data) {\n      if (data.dataType === \"source\" && data.sourceId === this.sourceId) {\n        this.$_emitEvent(\"layer-source-loading\", { sourceId: this.sourceId });\n        this.map.off(\"dataloading\", this.$_watchSourceLoading);\n      }\n    },\n\n    move(beforeId) {\n      this.map.moveLayer(this.layerId, beforeId);\n      this.$_emitEvent(\"layer-moved\", {\n        layerId: this.layerId,\n        beforeId: beforeId,\n      });\n    },\n\n    remove() {\n      this.map.removeLayer(this.layerId);\n      this.map.removeSource(this.sourceId);\n      this.$_emitEvent(\"layer-removed\", { layerId: this.layerId });\n      this.$destroy();\n    },\n  },\n\n  render() {},\n};\n","import layerEvents from \"../lib/layerEvents\";\nimport mixin from \"./layerMixin\";\n\nexport default {\n  name: \"GeojsonLayer\",\n  mixins: [ mixin ],\n\n  computed: {\n    getSourceFeatures() {\n      return filter => {\n        if (this.map) {\n          return this.map.querySourceFeatures(this.sourceId, { filter });\n        }\n        return null;\n      };\n    },\n\n    getRenderedFeatures() {\n      return (geometry, filter) => {\n        if (this.map) {\n          return this.map.queryRenderedFeatures(geometry, {\n            layers: [ this.layerId ],\n            filter,\n          });\n        }\n        return null;\n      };\n    },\n\n    getClusterExpansionZoom() {\n      return clusterId => {\n        return new Promise((resolve, reject) => {\n          if (this.mapSource) {\n            this.mapSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n              if (err) {\n                return reject(err);\n              }\n              return resolve(zoom);\n            });\n          } else {\n            return reject(\n              new Error(`Map source with id ${this.sourceId} not found.`),\n            );\n          }\n        });\n      };\n    },\n\n    getClusterChildren() {\n      return clusterId => {\n        return new Promise((resolve, reject) => {\n          const source = this.mapSource;\n          if (source) {\n            source.getClusterChildren(clusterId, (err, features) => {\n              if (err) {\n                return reject(err);\n              }\n              return resolve(features);\n            });\n          } else {\n            return reject(\n              new Error(`Map source with id ${this.sourceId} not found.`),\n            );\n          }\n        });\n      };\n    },\n\n    getClusterLeaves() {\n      return (...args) => {\n        return new Promise((resolve, reject) => {\n          if (this.mapSource) {\n            this.mapSource.getClusterLeaves(...args, (err, features) => {\n              if (err) {\n                return reject(err);\n              }\n              return resolve(features);\n            });\n          } else {\n            return reject(\n              new Error(`Map source with id ${this.sourceId} not found.`),\n            );\n          }\n        });\n      };\n    },\n  },\n\n  created() {\n    console.log('GeojsonLayer.js created is running, this.sourceId:', this.sourceId, 'this.source:', this.source);\n    if (this.source) {\n      this.$watch(\n        \"source.data\",\n        function(next) {\n          if (this.initial) {\n            return;\n          }\n          this.mapSource.setData(next);\n        },\n        { deep: true },\n      );\n    }\n    this.$_deferredMount();\n  },\n\n  methods: {\n    $_deferredMount() {\n      // console.log('GeojsonLayer.js $_deferredMount is running, this.sourceId:', this.sourceId, 'this.source:', this.source);\n      // this.map = payload.map;\n      this.map.on(\"dataloading\", this.$_watchSourceLoading);\n      if (this.source) {\n        const source = {\n          type: \"geojson\",\n          ...this.source,\n        };\n        try {\n          console.log('try map.addSource is starting');\n          if (this.$props.layer.layout['icon-image']) {\n            this.map.loadImage(\n              this.$attrs.icon,\n              function(error, image) {\n                // console.log('inside loadImage, this.$props.layer.layout[icon-image]:', this.$props.layer.layout['icon-image'], 'image:', image, 'this.$attrs.icon:', this.$attrs.icon);\n                this.map.addImage(this.$props.layer.layout['icon-image'], image);\n              }.bind(this),\n            );\n          }\n          this.map.addSource(this.sourceId, source);\n          // console.log('try map.addSource is ending');\n        } catch (err) {\n          console.log('catch err is running, err:', err);\n          if (this.replaceSource) {\n            this.map.removeSource(this.sourceId);\n            this.map.addSource(this.sourceId, source);\n          }\n        }\n      }\n      // console.log('GeojsonLayer.js $_deferredMount, about to $_addLayer');\n      this.$_addLayer();\n      // console.log('GeojsonLayer.js $_deferredMount, after $_addLayer');\n      this.$_bindLayerEvents(layerEvents);\n      this.map.off(\"dataloading\", this.$_watchSourceLoading);\n      this.initial = false;\n    },\n\n    $_addLayer() {\n      // console.log('GeojsonLayer.js $_addLayer is starting');\n      let existed = this.map.getLayer(this.layerId);\n      if (existed) {\n        if (this.replace) {\n          this.map.removeLayer(this.layerId);\n        } else {\n          this.$_emitEvent(\"layer-exists\", { layerId: this.layerId });\n          return existed;\n        }\n      }\n      const layer = {\n        id: this.layerId,\n        source: this.sourceId,\n        ...this.layer,\n      };\n      console.log('$_addLayer is still running, layer:', layer);\n      this.map.addLayer(layer, this.before);\n      // console.log('$_addLayer after map.addLayer');\n      this.$_emitEvent(\"added\", { layerId: this.layerId });\n    },\n\n    setFeatureState(featureId, state) {\n      if (this.map) {\n        const params = { id: featureId, source: this.source };\n        return this.map.setFeatureState(params, state);\n      }\n    },\n\n    getFeatureState(featureId) {\n      if (this.map) {\n        const params = { id: featureId, source: this.source };\n        return this.map.getFeatureState(params);\n      }\n    },\n\n    removeFeatureState(featureId, sourceLayer, key) {\n      if (this.map) {\n        const params = {\n          id: featureId,\n          source: this.source,\n          sourceLayer,\n        };\n        return this.map.removeFeatureState(params, key);\n      }\n    },\n  },\n};\n","export default {\n  methods: {\n    /**\n     * Emit Vue event with additional data\n     *\n     * @param {string} name EventName\n     * @param {Object} [data={}] Additional data\n     */\n    $_emitEvent(name, data = {}) {\n      // console.log('$_emitEvent is running, name:', name, 'data:', data, 'this.map:', this.map);\n      this.$emit(name, {\n        map: this.map,\n        component: this,\n        ...data,\n      });\n    },\n\n    /**\n     * Emit Vue event with Mapbox event as additional data\n     *\n     * @param {Object} event\n     */\n    $_emitMapEvent(event, data = {}) {\n      // console.log('withEvents.js, $_emitMapEvent is running');\n      this.$_emitEvent(event.type, { mapboxEvent: event, ...data });\n    },\n  },\n};\n","export default [\n  \"mousedown\",\n  \"mouseup\",\n  \"click\",\n  \"dblclick\",\n  \"mousemove\",\n  \"mouseenter\",\n  \"mouseleave\",\n  \"mouseover\",\n  \"mouseout\",\n  \"contextmenu\",\n  \"touchstart\",\n  \"touchend\",\n  \"touchcancel\",\n];\n"],"sourceRoot":""}