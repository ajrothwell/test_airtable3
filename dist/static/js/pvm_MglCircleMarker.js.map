{"version":3,"sources":["webpack:///./node_modules/@phila/vue-mapping/src/mapbox/UI/CircleMarker.vue?b950","webpack:///node_modules/@phila/vue-mapping/src/mapbox/UI/CircleMarker.vue","webpack:///./node_modules/@phila/vue-mapping/src/mapbox/UI/CircleMarker.vue?25e4","webpack:///./node_modules/@phila/vue-mapping/src/mapbox/UI/CircleMarker.vue","webpack:///./node_modules/@phila/vue-mapping/src/mapbox/UI/withSelfEvents.js","webpack:///./node_modules/@phila/vue-mapping/src/mapbox/UI/CircleMarker.vue?b588","webpack:///./node_modules/@phila/vue-mapping/src/mapbox/lib/withEvents.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticStyle","_t","_e","staticRenderFns","drag","dragstart","dragend","click","mouseenter","mouseleave","name","mixins","inject","provide","self","marker","props","offset","type","default","coordinates","Array","required","color","String","fillColor","opacity","Number","fillOpacity","weight","size","anchor","draggable","Boolean","markerId","data","Object","featureId","tableId","initial","undefined","computed","$props","watch","map","remove","createCircleMarker","setDraggable","next","mounted","beforeDestroy","methods","el","document","createElement","addEventListener","e","stopPropagation","className","style","markerOptions","height","width","$slots","element","elm","mapbox","Marker","$listeners","on","newCoordinates","event","target","_lngLat","$_bindSelfEvents","eventNames","$_addMarker","setLngLat","addTo","$_bindMarkerDOMEvents","$_emitEvent","$_emitSelfEvent","$_emitMapEvent","keys","forEach","values","markerDOMEvents","includes","key","togglePopup","component","control","events","emitter","eventName","$_unbindSelfEvents","length","off","$emit","mapboxEvent"],"mappings":"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","file":"static/js/pvm_MglCircleMarker.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"display\":\"none\"}},[_vm._t(\"icon\"),(_vm.marker)?_vm._t(\"default\"):_vm._e()],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"display: none\">\n    <!-- slot for custom marker -->\n    <!-- <div class=\"test-div\" /> -->\n    <slot name=\"icon\" />\n    <!-- slot for popup -->\n    <slot v-if=\"marker\" />\n  </div>\n</template>\n\n<script>\nimport withEvents from \"../lib/withEvents\";\nimport withSelfEvents from \"./withSelfEvents\";\n\nconst markerEvents = {\n  drag: \"drag\",\n  dragstart: \"dragstart\",\n  dragend: \"dragend\",\n};\n\nconst markerDOMEvents = {\n  click: \"click\",\n  mouseenter: \"mouseenter\",\n  mouseleave: \"mouseleave\",\n};\n\nexport default {\n  name: \"MapCircleMarker\",\n  mixins: [ withEvents, withSelfEvents ],\n\n  inject: [ \"mapbox\", \"map\" ],\n\n  provide() {\n    const self = this;\n    return {\n      get marker() {\n        return self.marker;\n      },\n    };\n  },\n\n  props: {\n    // mapbox marker options\n    offset: {\n      type: [ Object, Array ],\n      default: () => [ 0, 0 ],\n    },\n    coordinates: {\n      type: Array,\n      required: true,\n    },\n    color: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n    },\n    opacity: {\n      type: Number,\n    },\n    fillOpacity: {\n      type: Number,\n    },\n    weight: {\n      type: Number,\n    },\n    size: {\n      type: Number,\n    },\n    anchor: {\n      type: String,\n      default: 'center',\n    },\n    draggable: {\n      type: Boolean,\n      default: false,\n    },\n    markerId: {\n      type: String,\n      default: null,\n    },\n    data: {\n      type: Object,\n      default: function() {\n        return {\n          featureId: null,\n          tableId: null,\n        };\n        // featureId: {\n        //   type: String,\n        // },\n        // tableId: {\n        //   String,\n        // },\n      },\n    },\n    // selected: {\n    //   type: Boolean,\n    //   default: false,\n    // },\n  },\n\n  data() {\n    return {\n      initial: true,\n      marker: undefined,\n    };\n  },\n  computed: {\n    featureId() {\n      return this.$props.data.featureId;\n    },\n  },\n  watch: {\n    featureId() {\n      // console.log('CircleMarker.vue watch featureId is firing');\n      if (this.initial) {\n        return;\n      }\n      if (this.map !== undefined && this.marker !== undefined) {\n        this.marker.remove();\n      }\n      this.createCircleMarker();\n    },\n    fillColor() {\n      // console.log('CircleMarker.vue watch markerId is firing');\n      if (this.initial) {\n        return;\n      }\n      if (this.map !== undefined && this.marker !== undefined) {\n        this.marker.remove();\n      }\n      this.createCircleMarker();\n    },\n    draggable(next) {\n      if (this.initial) {\n        return;\n      }\n      this.marker.setDraggable(next);\n    },\n  },\n  mounted() {\n    this.createCircleMarker();\n  },\n  beforeDestroy() {\n    // console.log('CircleMarker.vue beforeDestroy() is running');\n    if (this.map !== undefined && this.marker !== undefined) {\n      this.marker.remove();\n    }\n  },\n  methods: {\n    createCircleMarker() {\n      const markerOptions = {\n        ...this.$props,\n      };\n      // console.log('CircleMarker.vue createCircleMaker is running'); //, markerOptions:', markerOptions);\n\n      var el = document.createElement('div');\n\n      el.addEventListener('click', function(e) {\n        e.stopPropagation();\n      });\n\n      el.className = 'circle-div';\n      el.style.color = markerOptions.color;\n      el.style['background-color'] = markerOptions.fillColor;\n      el.style['border-width'] = markerOptions.weight;\n      el.style['opacity'] = markerOptions.opacity;\n      el.style.height = markerOptions.size + 'px';\n      el.style.width = markerOptions.size + 'px';\n\n      if (this.$slots.marker) {\n        markerOptions.element = this.$slots.marker[0].elm;\n      } else {\n        markerOptions.element = el;\n      }\n\n      // this.marker = new this.mapbox.Marker(el);\n      this.marker = new this.mapbox.Marker(el);\n\n      if (this.$listeners[\"update:coordinates\"]) {\n        this.marker.on(\"dragend\", event => {\n          let newCoordinates;\n          if (this.coordinates instanceof Array) {\n            newCoordinates = [ event.target._lngLat.lng, event.target._lngLat.lat ];\n          } else {\n            newCoordinates = event.target._lngLat;\n          }\n          this.$emit(\"update:coordinates\", newCoordinates);\n        });\n      }\n\n      // if (this.$props.selected) {\n      //   console.log('CircleMarker.vue createCircleMarker, this.$props.selected is true');\n      //   this.togglePopup();\n      // }\n\n      const eventNames = Object.keys(markerEvents);\n      this.$_bindSelfEvents(eventNames, this.marker);\n\n      this.initial = false;\n      this.$_addMarker();\n    },\n\n    $_addMarker() {\n      this.marker.setLngLat(this.coordinates).addTo(this.map);\n      this.$_bindMarkerDOMEvents();\n      this.$_emitEvent(\"added\", { marker: this.marker });\n    },\n\n    $_emitSelfEvent(event) {\n      // console.log('CircleMarker.vue, $_emitSelfEvent is running');\n      this.$_emitMapEvent(event, { marker: this.marker });\n    },\n\n    $_bindMarkerDOMEvents() {\n      Object.keys(this.$listeners).forEach(key => {\n        if (Object.values(markerDOMEvents).includes(key)) {\n          this.marker._element.addEventListener(key, event => {\n            this.$_emitSelfEvent(event);\n          });\n        }\n      });\n    },\n\n    remove() {\n      this.marker.remove();\n      this.$_emitEvent(\"removed\");\n    },\n\n    togglePopup() {\n      // console.log('CircleMarker togglePopup is running');\n      return this.marker.togglePopup();\n    },\n  },\n};\n</script>\n\n<style>\n\n/* .mapboxgl-marker { */\n.markertest {\n  icon-image: url('https://mapboard-images.s3.amazonaws.com/camera.png');\n  background-size: cover;\n  width: 30px;\n  height: 21.5px;\n  /* border-radius: 20%; */\n  cursor: pointer;\n}\n\n.circle-div {\n  /* width: 14px;\n  height: 14px; */\n  border-radius: 50%;\n  border-width: 1px;\n  /* background-color: #03a5fc; */\n  /* opacity: 0.6; */\n  /* border-color: black; */\n  border-style: solid;\n  cursor: pointer;\n}\n/* z-index: 20000; */\n\n</style>\n","import mod from \"-!../../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../../thread-loader/dist/cjs.js!../../../../../babel-loader/lib/index.js!../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../vue-loader/lib/index.js??vue-loader-options!./CircleMarker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../cache-loader/dist/cjs.js??ref--12-0!../../../../../thread-loader/dist/cjs.js!../../../../../babel-loader/lib/index.js!../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../vue-loader/lib/index.js??vue-loader-options!./CircleMarker.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CircleMarker.vue?vue&type=template&id=a19a2aca&\"\nimport script from \"./CircleMarker.vue?vue&type=script&lang=js&\"\nexport * from \"./CircleMarker.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CircleMarker.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\n  methods: {\n    $_emitSelfEvent(event, data = {}) {\n      // console.log('withSelfEvents.js, $emitSelfEvent is running');\n      this.$_emitMapEvent(event, { control: this.control, ...data });\n    },\n    /** Bind events for markers, popups and controls.\n     * MapboxGL JS emits this events on popup or marker object,\n     * so we treat them as 'self' events of these objects\n     */\n    $_bindSelfEvents(events, emitter) {\n      Object.keys(this.$listeners).forEach(eventName => {\n        if (events.includes(eventName)) {\n          emitter.on(eventName, this.$_emitSelfEvent);\n        }\n      });\n    },\n\n    $_unbindSelfEvents(events, emitter) {\n      if (events.length === 0) {\n        return;\n      }\n      if (!emitter) {\n        return;\n      }\n      events.forEach(eventName => {\n        emitter.off(eventName, this.$_emitSelfEvent);\n      });\n    },\n  },\n};\n","import mod from \"-!../../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../vue-loader/lib/index.js??vue-loader-options!./CircleMarker.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../cache-loader/dist/cjs.js??ref--0-0!../../../../../vue-loader/lib/index.js??vue-loader-options!./CircleMarker.vue?vue&type=style&index=0&lang=css&\"","export default {\n  methods: {\n    /**\n     * Emit Vue event with additional data\n     *\n     * @param {string} name EventName\n     * @param {Object} [data={}] Additional data\n     */\n    $_emitEvent(name, data = {}) {\n      // console.log('$_emitEvent is running, name:', name, 'data:', data, 'this.map:', this.map);\n      this.$emit(name, {\n        map: this.map,\n        component: this,\n        ...data,\n      });\n    },\n\n    /**\n     * Emit Vue event with Mapbox event as additional data\n     *\n     * @param {Object} event\n     */\n    $_emitMapEvent(event, data = {}) {\n      // console.log('withEvents.js, $_emitMapEvent is running');\n      this.$_emitEvent(event.type, { mapboxEvent: event, ...data });\n    },\n  },\n};\n"],"sourceRoot":""}